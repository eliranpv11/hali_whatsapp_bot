# -*- coding: utf-8 -*-
from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
from openai import OpenAI
from dotenv import load_dotenv
import os
import requests

# ===== ????? ?????? ??-.env =====
load_dotenv()

# ??????? ?-OpenAI
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
TELEGRAM_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

app = Flask(__name__)

# ===== ?????? ?? ??? =====
SYSTEM_PERSONA = (
    "?? ??? ?? ¨C ???? ????????? ??????? ?? ?????? ?? ???? ???? ???? ????. "
    "???? ?????? '???? ???? ????' ¨C ????? ?? ????. "
    "?? ???, ?????? ??????, ?? ???? ????? ??? ???? ??. "
    "???????? ??????? ???? ????? ?? ??????? ¨C ?????? ???????? ??? ????? ?????. "
    "????? ????? ?????, ????? ??????, ?? ??????? ?????? ???????."
)

# ===== ????? ????? ?????? ?? ??? (????? ????) =====
def send_to_telegram(msg: str):
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        data = {"chat_id": TELEGRAM_CHAT_ID, "text": msg}
        requests.post(url, data=data)
    except Exception as e:
        print("? ???? ?????? ?? ???:", e)

# ==========================================================
# ?? ??? ??????? (Twilio Webhook)
# ==========================================================
@app.route("/whatsapp", methods=["POST"])
def whatsapp_reply():
    incoming_msg = (request.form.get("Body") or "").strip()
    sender = request.form.get("From") or "unknown"

    # ????? ?????? ??????? ????????
    print(f"?? ????? ???????? ({sender}): {incoming_msg}")

    # ????? ?? ?????? ?? ??? (????? ????)
    send_to_telegram(f"?? ??????? ({sender}): {incoming_msg}")

    tw = MessagingResponse()

    if not incoming_msg:
        tw.message("??? ??? ?? ?? ???? ????? ?? ??????")
        return str(tw)

    try:
        completion = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": SYSTEM_PERSONA},
                {"role": "user", "content": incoming_msg}
            ],
            temperature=0.8,
            max_tokens=300,
        )

        reply = completion.choices[0].message.content

        # ????? ?? ?????? ?? ???
        send_to_telegram(f"?? ????? ??? (???????):\n{reply}")

        tw.message(reply)
        return str(tw)

    except Exception as e:
        print("? ????? ????????:", e)
        send_to_telegram(f"?? ????? ????????: {e}")
        tw.message("????, ????? ???? ???? ?? ??? ??? ??? ???")
        return str(tw), 200


# ==========================================================
# ?? ??? ????? (Telegram Webhook)
# ==========================================================
@app.route("/telegram", methods=["POST"])
def telegram_reply():
    data = request.get_json()
    if not data or "message" not in data:
        return "no message", 200

    chat_id = data["message"]["chat"]["id"]
    incoming_msg = data["message"].get("text", "").strip()
    user_name = data["message"]["from"].get("first_name", "?? ????")

    print(f"?? ????? ?????? ({user_name} / {chat_id}): {incoming_msg}")

    if not incoming_msg:
        send_message_telegram(chat_id, "??? ??? ?? ?? ???? ????? ?? ??????")
        return "ok", 200

    try:
        completion = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": SYSTEM_PERSONA},
                {"role": "user", "content": incoming_msg}
            ],
            temperature=0.8,
            max_tokens=300,
        )

        reply = completion.choices[0].message.content
        send_message_telegram(chat_id, reply)

    except Exception as e:
        print("? ????? ??????:", e)
        send_message_telegram(chat_id, "????, ????? ???? ???? ?? ??? ??? ??? ???")

    return "ok", 200


# ===== ??????? ????? ?????? ?????? ???????? ?????? =====
def send_message_telegram(chat_id, text):
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        requests.post(url, json={"chat_id": chat_id, "text": text})
    except Exception as e:
        print("? ????? ?????? ????? ??????:", e)


# ==========================================================
# ?? ????? ????
# ==========================================================
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
